var tipuesearch = {"pages": [{'title': 'About', 'text': '網站倉儲: https://github.com/40923144/cd2022 \n 課程網誌: https://40923144.github.io/cd2022/blog/index.html \n', 'tags': '', 'url': 'About.html'}, {'title': 'Note', 'text': '', 'tags': '', 'url': 'Note.html'}, {'title': '倉儲建立', 'text': '先在自己的隨身碟新增一個資料夾"cd2022" \n \n cd tmp \n cd cd2022 \n \n 複製自己倉儲網址 \n \n 並打上 git clone recurse submodules,後面貼上剛剛複製的網址 \n \n 完成後打cms進入靜態網站,並複製以下網址 \n \n 先將title更改成自己學號 \n \n 再點選Edit All就可以更改自己的網站內容,完成後記得按generate_pages \n \n 回到小黑窗並打上acp "(名稱)" \n \n', 'tags': '', 'url': '倉儲建立.html'}, {'title': 'Token 建立', 'text': '進到Setting \n \n 選擇Developer settings \n \n 進到Personal access tokens 之後再點選Generate new token \n \n 更改以下東西在按下Generate token後會出現一串亂碼先複製下來 \n \n 將剛剛複製的亂碼貼到config就完成了 \n \n', 'tags': '', 'url': 'Token 建立.html'}, {'title': 'WINK 上傳', 'text': '點右鍵 再點檢視頁面來源 \n \n 再複製以下的東西 \n <script> var winkVideoData = { dataVersion: 1, frameRate: 20, buttonFrameLength: 10, buttonFrameOffset: 5, frameStops: { }, }; // ]]></script> \n \n 修改框框內的東西再將影片放入download就完成了 \n \n', 'tags': '', 'url': 'WINK 上傳.html'}, {'title': 'Leo', 'text': 'cd tmp \n leo \n 進入到自己的blog \n \n 紅框框內就可以製作自己的部落格 \n \n 完稱編輯後,先儲存再對著local-blog點右鍵再點Goto Script \n \n 複製框框內的東西到小黑窗在打上acp就完成了 \n \n \n', 'tags': '', 'url': 'Leo.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'W2', 'text': '第6組: repo: \xa0 40923113 \xa0 www: \xa0 40923113 \xa0 cd2022ag6-repo: \xa0 40923113 \xa0 cd2022ag6-www: \xa0 40923113 repo: \xa0 40923130 \xa0 www: \xa0 40923130 \xa0 cd2022ag6-repo: \xa0 40923130 \xa0 cd2022ag6-www: \xa0 40923130 repo: \xa0 40923140 \xa0 www: \xa0 40923140 \xa0 cd2022ag6-repo: \xa0 40923140 \xa0 cd2022ag6-www: \xa0 40923140 repo: \xa0 40923144 \xa0 www: \xa0 40923144 \xa0 cd2022ag6-repo: \xa0 40923144 \xa0 cd2022ag6-www: \xa0 40923144 repo: \xa0 40923145 \xa0 www: \xa0 40923145 \xa0 cd2022ag6-repo: \xa0 40923145 \xa0 cd2022ag6-www: \xa0 40923145 repo: \xa0 40923149 \xa0 www: \xa0 40923149 \xa0 cd2022ag6-repo: \xa0 40923149 \xa0 cd2022ag6-www: \xa0 40923149 repo: \xa0 40923150 \xa0 www: \xa0 40923150 \xa0 cd2022ag6-repo: \xa0 40923150 \xa0 cd2022ag6-www: \xa0 40923150 repo: \xa0 40923152 \xa0 www: \xa0 40923152 \xa0 cd2022ag6-repo: \xa0 40923152 \xa0 cd2022ag6-www: \xa0 40923152 \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W3', 'text': '16.子母件組合 \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 17.製作三視圖(做出零件外部部分) \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 18.製作三視圖(繪製放置馬達之平台) \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 19.繪製三視圖(做出完成的零件三視圖) \n \n \n \n \n \n   \n \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W6', 'text': '打上 leo 進到自己的blog \n \n 將框框內更改成當週的標題,下面可以就可以開始製作自己的部落格了 \n \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '\n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '\n', 'tags': '', 'url': 'W8.html'}, {'title': 'W10', 'text': '請各組員在下列影片中加入註解說明後, 分別以 w10_block_ui、w10_nx_integ 與 w10_ssh 作為標題, 將說明影片嵌入個人 cd2022 網站頁面 (設為 H2 或 H3) 及 blog 網誌中. \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W11', 'text': '本週將要進行兩項任務, 第一是確認各分組能夠有效在組長的分組倉儲中, 以非同步協同的方式進行 uArm 機械手臂場景的建置與操控, 第二則是從 CoppeliaSim 的兩種 \xa0 XML 檔案格式 , 了解如何透過程式方法建立 uArm 機械手臂場景. \n w11-1 任務: \n 請各組組員在第一節課堂時段, 以每兩人一小組的方式, 在組長帳號下的分組倉儲中的同一網頁 (標題為 w11s1 ~w11s4) 加入個人 w8-w10 協同設計過程所負責的項目內容與心得. 過程中請參考下列 Wink 影片解決可能產生的衝突, 最後並將 git pull 至 acp 的操作過程, 建立 Wink 影片後, 以組員為單位嵌入個人負責的協同網頁中. \n 學習要點: \n 各組員是否透過 SSH 協定, 參與組長帳號下的分組倉儲內容協同編輯? \n 各組員是否在自己的 Github 帳號下, fork 分組協同倉儲後, 與組長帳號下的分組倉儲內容保持同步? \n 各組員是否在近端對分組倉儲改版前, 都透過 git pull 處理內容衝突與合併後, 再對分組倉儲改版? \n 各組是否每週舉行分組會議, 檢討協同設計內容進度, 並研討所面臨議題解決方案? \n w11-2 任務: \n \n 請自行搜尋 STL 檔案中的 ASCII 與 Binary 格式, 舉例說明這兩種零件檔案格式如何定義? \n 請利用 MTB 機械手臂中的 Link2 零件檔案為例, 分別在 Solvespace、NX 與 Onshape 中建立 Link2 零件檔案後, 分別以 Binary 與 ASCII 格式轉出 STL 檔案, 若轉出的 STL 為 Binary 格式, 則請設法以 Python 程式轉為 ASCII 格式, 反之, 若轉出的 STL 為 ASCII 格式, 也請設法以 Python 程式轉為 Binary 格式. \n 請試著將 Link2 零件檔案轉入 Coppeliasim 後, 分別以兩種 XML 格式轉出, 並以 Leo Editor 導入後比較其內容差異. CoppeliaSim 兩種 XML 格式中的 tags, 可利用下列檔案讀取: \n \n 學習要點: \n STL 零件檔案格式是如何定義的? \n 為什麼 STL 格式的零件檔案需要分 ASCII 與 Binary 格式? \n Python 程式如何讀取 Binary 格式的 STL 零件檔案? \n 能否利用 Python 程式對 STL 格式的零件檔案, 分別在 ASCII 與 Binary 之間互相轉換? \n CoppeliaSim 機電模擬場景中的 XML 檔案, 能否置入 STL 格式的零件? \n 利用程式方法組合 XML 格式的 CoppeliaSim 機電模擬場景的目的為何? \n 一個整合零組件架構、驅動配置、GUI 介面以及自動控制程式的 CoppeliaSim 場景, 其 XML tags 與屬性檔案能否透過 Leo Editor 執行編輯? \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': '\n', 'tags': '', 'url': 'W12.html'}, {'title': 'W13', 'text': '\n', 'tags': '', 'url': 'W13.html'}, {'title': 'W14', 'text': '\n \n \n \n', 'tags': '', 'url': 'W14.html'}]};